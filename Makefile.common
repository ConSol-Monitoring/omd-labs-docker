# This file is used to manage local images
# depending of the current dir and branch.
# Branch 'master' leads to no tag (=latest),
# others to "local/[dirname]:[branchname]

DISTRO:=

ifeq (,$(subst ",,$(DISTRO)))
    $(error DISTRO must not be empty, use Makefile.omd-labs-* instead)
endif

# local builds will be named like this
REPO = local/omd-labs-$(DISTRO)
BRANCH=$(shell git rev-parse --abbrev-ref HEAD)
# BRANCH=TAG, but "master"="nightly"
TAG  = $(shell git rev-parse --abbrev-ref HEAD | sed 's/master/nightly/')
# the final image name
IMAGE=$(REPO):$(TAG)

# will create another OMD site SITENAME, if set
ifdef SITENAME
	BUILDARGS = --build-arg SITENAME=$(SITENAME)
else
  SITENAME=demo
endif

export DOCKER_REPO=index.docker.io/consol/omd-labs-$(DISTRO)
export IMAGE_NAME=$(IMAGE)
export SOURCE_BRANCH=$(BRANCH)

.PHONY: build bash start echo

build:
	# the hook is also executed on Docker Hub
	./hooks/build $(BUILDARGS)
	@echo "Successfully built" $(IMAGE)

start:
	docker run -p 8443:443 -d $(IMAGE)

startvol:
	mkdir -p site/local
	mkdir -p site/etc
	mkdir -p site/var
	docker run -d -p 8443:443             \
	-v $(shell pwd)/site/local:/omd/sites/$(SITENAME)/local.mount \
	-v $(shell pwd)/site/etc:/omd/sites/$(SITENAME)/etc.mount     \
	-v $(shell pwd)/site/var:/omd/sites/$(SITENAME)/var.mount     \
	$(IMAGE)

echo:
	@echo $(IMAGE)

bash:
	docker run --rm -p 8443:443 -it $(IMAGE) /bin/bash

bashvol:
	docker run --rm -p 8443:443 -it \
	-v $(shell pwd)/site/local:/omd/sites/$(SITENAME)/local.mount \
	-v $(shell pwd)/site/etc:/omd/sites/$(SITENAME)/etc.mount     \
	-v $(shell pwd)/site/var:/omd/sites/$(SITENAME)/var.mount     \
	$(IMAGE) /bin/bash
